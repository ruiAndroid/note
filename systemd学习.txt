教程地址:
http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html

------systemctl命令-----systemd的主命令用于管理系统
//重启系统
sudo systemctl reboot
//关闭系统，切断电源
sudo systemctl poweroff
//CPU停止工作
sudo systemctl halt
//暂停系统
systemd学习

sudo systemctl suspend
//让系统进入冬眠状态
sudo systemctl hibernate
//让系统进入交互式休眠状态
sudo systemctl hybrid-sleep
//启动进入救援状态
sudo systemctl rescue

------system-analyze命令-----查看系统启动耗时
//查看每个服务的启动耗时
sudo systemd-analyze blame
//显示瀑布状的启动过程流
sudo systemd-analyze critical-chain
//显示指定服务的启动流
sudo systemd-analyze critical-chain atd.service

-----hostnamectl命令-----用于查看当前主机的信息
//显示当前主机的信息
sudo hostnamectl 
//设置主机名
sudo hostnamectl set-hostname rui

-----localectl-----查看本地化设置
//查看本地化设置localectl
localectl
//设置本地化参数
sudo localectl set-locale LANG=en_GB.utf8

-----timedatectl------用于查看当前时区设置
//查看当前时区设置
sudo timedatactl
//显示所有可用的时区
timedatactl list-timezones
//设置当前时区

-----loginctl-----查看当前登录的用户
//列出当前session
sudo loginctl list-sessions
//列出当前登录用户
sudo loginctl list-users
//列出指定用户的信息
sudo loginctl show-user rui

-----Unit----- Systemd可以管理所有系统资源,不同的资源统称为Unit
unit分为12种
	Service unit:系统服务
	Target unit:多个unit构成的一个组
	Device unit:硬件设备
	Mount unit:文件系统的挂载点
	Automount unit:自动挂载点
	Path unit:文件或路径
	Scope unit:不是由systemd启动的外部进程
	Slice unit:进程组
	Snapshot unit:Systemd快照，可以切回某个快照
	Socket unit:进程间通信的socket
	Swap unit:swap文件
	Timer unit:定时器
//列出正在运行的unit
sudo systemctl list-units
//列出所有unit包括没有找到配置文件的或者启动失败的
sudo systemctl list-units --all
//列出所有没有运行的 unit
sudo systemctl list-units --all --state=inactive
//列出所有的加载失败的unit
sudo systemctl list-units --failed
//列出所有正在运行的，类型为service的unit
sudo systemctl list-units --type=service

----systemctl status-----
//显示单个unit的状态
sudo systemctl status bluetooth.service
//显示远程主机的某个unit的状态
sudo systemctl -H root@xx.xxx status httpd.service
//判断某个unit是否在运行
sudo systemctl is-active application.service
//判断某个unit是否处于启动失败状态
sudo systemctl is-failed application.service
//判断某个unit服务是否建立了启动链接
sudo systemctl is-enabled application.service


------unit管理-----
//立即启动一个服务
sudo systemctl start apache.service
//立即停止一个服务
sudo systemctl stop apache.service
//重启一个服务
sudo systemctl restart apache.service
//杀死一个服务的所有子进程
sudo systemctl kill apache.service
//重新加载一个服务的配置文件
sudo systemctl reload apache.service
//重载所有修改过的配置文件
sudo systemctl daemon-reload
//显示某个unit的所有底层参数
sudo systemctl show httpd.service
//显示某个unit的指定属性值
sudo systemctl show -p CPUShares httpd.service
//设置某个unit的指定属性
sudo systemctl set-property httpd.service CPUShare=500

-----unit依赖关系-----
unit之间存在依赖关系,例如A依赖B，就意味着 systemd在启动A的时候同时会去启动B
 //列出一个unit的所有依赖
sudo systemctl list-dependencies nginx.service

-----unit的配置文件-----
1.概述
每个unit都有一个配置文件，告诉Systemd怎么去启动这个unit
Systemd 默认从目录/etc/systemd/system/读取配置文件。但是，里面存放的大部分文件都是符号链接，指向目录/usr/lib/systemd/system/，真正的配置文件存放在那个目录。
systemctl enable命令用于在上面两个目录之间，建立符号链接关系。
sudo systemctl enable clamd@scan.service

如果配置文件里面设置了开机启动，systemctl enable命令相当于激活开机启动。
与之对应的，systemctl disable命令用于在两个目录之间，撤销符号链接关系，相当于撤销开机启动
sudo systemctl disable clamd@scan.service
配置文件的后缀名，就是该 Unit 的种类，比如sshd.socket。如果省略，Systemd 默认后缀名为.service，所以sshd会被理解成sshd.service。

2.配置文件的状态
//列出所有配置文件
sudo systemctl list-unit-files
//列出指定类型的配置文件
sudo sytemctl list-unit-files --type=service

这个命令会输出一个列表。
sudo systemctl list-unit-files
UNIT FILE              STATE
chronyd.service        enabled
clamd@.service         static
clamd@scan.service     disabled

这个列表显示每个配置文件的状态，一共有四种。
enabled：已建立启动链接
disabled：没建立启动链接
static：该配置文件没有[Install]部分（无法执行），只能作为其他配置文件的依赖
masked：该配置文件被禁止建立启动链接

注意，从配置文件的状态无法看出，该 Unit 是否正在运行。这必须执行前面提到的systemctl status命令。
sudo systemctl status bluetooth.service
一旦修改配置文件，就要让 SystemD 重新加载配置文件，然后重新启动，否则修改不会生效。
sudo systemctl daemon-reload
sudo systemctl restart httpd.service

3.配置文件的格式

